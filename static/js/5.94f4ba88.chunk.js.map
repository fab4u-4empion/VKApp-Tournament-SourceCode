{"version":3,"sources":["time/TimeComponent.js","time/TimeString.js","notification/notification_subscribe.js","notification/notification_unsubscribe.js","getTournament/Upcoming.js","getTournament/RegistrationStart.js","getTournament/RegistrationFinish.js","getTournament/Running.js","getTournament/Finish.js","getTournament/all.js","App.js"],"names":["Time","props","time","Date","timestamp","hour","getHours","minute","getMinutes","day","getDate","monthNum","getMonth","year","getFullYear","monthNumeric","mode","TimeStr","options","month","toLocaleDateString","lastClick","getTime","lastTournament","subscribeResult","tournamentInfo","Promise","resolve","reject","indexOf","tournament_id","push","bridge","send","then","url","window","location","search","request","XMLHttpRequest","open","onload","splice","JSON","parse","responseText","error","onerror","catch","unsubscribeResult","positionY","positionX","stylesIsUpdated","buttonHeight","windowFocusTime","isOpenedFirstTime","tournamentsID","bellArrayButtons","bellArrayModalAndroid","bellArrayModalIOS","activeBells","windowFocus","windowFocusCounter","tournament","TournamentList","reduce","p","e","tournamentInfoRequest","data","teams","map","elem","sessionStorage","setItem","width","height","UpcommingComponent","state","activeModal","modalHistory","popout","snackbar","bellsButtons","bellsAndroid","bellsIOS","sendPost","bind","shareTargetRef","React","createRef","shareLink","closeActionSheet","setState","modalBack","setTimeout","setActiveModal","length","history","back","document","body","style","overflow","onClose","duration","before","size","background","fill","start_at","title","registration_start_at","registration_end_at","successSnackbar","this","buildRequest","isDesktop","viewWidth","ViewWidth","MOBILE","errorSnackbar","link","text","event","target","closest","getBoundingClientRect","top","left","actionShet","pushState","iosCloseItem","autoclose","header","toggleRef","current","onClick","modal","activeSubscriptions","console","log","hash","Number","slice","checkSubscriptions","getElementsByClassName","MutationObserver","mutations","documentElement","clientHeight","observe","attributes","attributeFilter","addEventListener","isMobile","platform","Modal","id","IOS","subscribeToNotification","ANDROID","right","className","marginLeft","display","alignItems","color","end_at","fontWeight","max","description","List","status","getRootRef","openShareActionSheet","Component","Upcomming","withPlatform","withAdaptivity","RegStartComponent","total","confirmed","RegStart","RegFinishComponent","RegFinish","RunningComponent","Running","FinishComponent","openShareActionSheetFinish","Finish","All","Upcoming","isOpen","Application","contextOpened","activeTab","getItem","content","onfocus","x","scrollX","y","scrollY","scroll","paddingTop","vertical","filled","showArrows","getScrollToLeft","i","getScrollToRight","scrollTo","selected","wide"],"mappings":"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","file":"static/js/5.94f4ba88.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Time(props) {\r\n\r\n    var time = new Date((props.timestamp)*1000);\r\n\r\n    var hour = time.getHours();\r\n    var minute = time.getMinutes();\r\n    var day = time.getDate();\r\n    var monthNum = time.getMonth() + 1; \r\n    var year = time.getFullYear();\r\n    var monthNumeric = monthNum;\r\n\r\n    var month = [\r\n        \"default\",\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n        \"декабря\"\r\n    ];\r\n\r\n    if (minute < 10) {\r\n        minute = \"0\"+minute; \r\n    }\r\n\r\n    if (monthNum < 10) {\r\n        monthNumeric = \"0\"+monthNum; \r\n    }\r\n\r\n    if (day < 10) {\r\n        day = \"0\"+day; \r\n    }\r\n\r\n    switch (props.mode) {\r\n        case \"day\":\r\n            return ( <span>{day+\" \"+month[monthNum]+\" \"+ year}</span> )\r\n\r\n        case \"time\":\r\n            return ( <span>{hour+\":\"+minute}</span> )\r\n\r\n        case \"dayAndTime\":\r\n            return ( <span>{day+\".\"+monthNumeric+\", \"+hour+\":\"+minute}</span> )    \r\n            \r\n        default:            \r\n            return ( <span>{day+\".\"+monthNumeric+\".\"+year+\", \"+hour+\":\"+minute}</span> ); \r\n    }  \r\n}\r\n\r\nexport default Time","function TimeStr (timestamp, mode) {\r\n    var time = new Date(timestamp * 1000)\r\n\r\n    switch (mode) {\r\n        case \"day\":\r\n            var options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n            options.timeZone = 'UTC';\r\n            return (time.toLocaleDateString('ru-RU', options) + \" (UTC)\")\r\n\r\n        case \"time\":\r\n            var options = {hour: 'numeric', minute: 'numeric' };\r\n            options.timeZone = 'UTC';\r\n            return ( time.toLocaleDateString('ru-RU', options) + \" (UTC)\")\r\n\r\n        case \"dayAndTime\":\r\n            var options = {month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' };\r\n            options.timeZone = 'UTC';\r\n            return ( time.toLocaleDateString('ru-RU', options) + \" (UTC)\")    \r\n            \r\n        default:          \r\n            var options = {month: 'numeric', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric' }; \r\n            options.timeZone = 'UTC'; \r\n            return ( time.toLocaleDateString('ru-RU', options) + \" (UTC)\"); \r\n    }  \r\n}\r\n\r\nexport default TimeStr","import bridge from \"@vkontakte/vk-bridge\"\r\n\r\nvar lastClick = new Date().getTime()\r\nvar lastTournament = []\r\n\r\nfunction subscribeResult(tournamentInfo) {\r\n    var subscribe = new Promise((resolve, reject) => {\r\n        var currentTime = new Date().getTime()\r\n        if (currentTime - lastClick > 1500 && lastTournament.indexOf(tournamentInfo.tournament_id) == -1) {\r\n            lastClick = new Date().getTime()\r\n            lastTournament.push(tournamentInfo.tournament_id)\r\n            bridge\r\n            .send(\"VKWebAppAllowNotifications\")\r\n            .then(() => {\r\n                var url = `https://wotbtournamentvkapp.ru/vkapp/subscribe${window.location.search}&tournament_id=${tournamentInfo.tournament_id}`\r\n                var request = new XMLHttpRequest()\r\n                request.open('GET', url, true)\r\n                request.send()\r\n                request.onload = () => {\r\n                    lastTournament.splice(lastTournament.indexOf(tournamentInfo.tournament_id), 1)\r\n                    try {\r\n                        if (JSON.parse(request.responseText) == 200)\r\n                            resolve()\r\n                        else\r\n                            if (JSON.parse(request.responseText) == 300)\r\n                                resolve()\r\n                            else    \r\n                                reject()       \r\n                    } catch (error) {\r\n                        reject()\r\n                    }\r\n                }\r\n                request.onerror = () => {\r\n                    reject()\r\n                }\r\n            })\r\n            .catch(() => {\r\n                lastTournament.splice(lastTournament.indexOf(tournamentInfo.tournament_id), 1)\r\n            })        \r\n        }   \r\n    })\r\n    return subscribe\r\n}\r\n\r\nexport default subscribeResult","function unsubscribeResult(tournamentInfo) {\r\n    var unsubscribe = new Promise((resolve, reject) => {\r\n        var url = `https://wotbtournamentvkapp.ru/vkapp/unsubscribe${window.location.search}&tournament_id=${tournamentInfo.tournament_id}`\r\n        var request = new XMLHttpRequest()\r\n        request.open('GET', url, true)\r\n        request.send()\r\n        request.onload = () => {\r\n            try {\r\n                if (JSON.parse(request.responseText) == 200)\r\n                    resolve()\r\n                else\r\n                    reject()\r\n            } catch (error) {\r\n                reject()\r\n            }\r\n        }\r\n        request.onerror = () => {\r\n            reject()\r\n        }  \r\n    })\r\n    return unsubscribe\r\n}\r\n\r\nexport default unsubscribeResult","import React from 'react';\r\nimport {Root, CardGrid, Card, Button, ModalPage, ModalRoot, ModalPageHeader, PanelHeaderButton, Group, Placeholder, withAdaptivity, ViewWidth, withPlatform, ANDROID, PanelHeaderClose, IOS} from \"@vkontakte/vkui\";\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\r\nimport Icon16CheckCircleOutline from '@vkontakte/icons/dist/16/check_circle_outline';\r\nimport Icon16ReplyOutline from '@vkontakte/icons/dist/16/reply_outline';\r\nimport Icon16InfoOutline from '@vkontakte/icons/dist/16/info_outline';\r\nimport Time from \"../time/TimeComponent\";\r\nimport TimeStr from \"../time/TimeString\";\r\nimport {Snackbar, Avatar, ActionSheetItem, ActionSheet} from '@vkontakte/vkui'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { Icon24Dismiss } from '@vkontakte/icons';\r\nimport subscribeResult from '../notification/notification_subscribe'\r\nimport unsubscribeResult from '../notification/notification_unsubscribe';\r\nimport { Icon28NotificationAddOutline } from '@vkontakte/icons';\r\nimport { Icon24NotificationCheckOutline } from '@vkontakte/icons';\r\n\r\nvar isOpenedFirstTime = false \r\nvar tournamentsID = []  \r\nvar positionY \r\nvar positionX\r\nvar stylesIsUpdated\r\nvar buttonHeight\r\nvar bellArrayButtons = {}\r\nvar bellArrayModalAndroid = {}\r\nvar bellArrayModalIOS = {}\r\nvar activeBells = []\r\nvar windowFocus = false\r\nvar windowFocusCounter = 0\r\nvar windowFocusTime\r\n\r\nfunction getPosition() {\r\n    stylesIsUpdated = false\r\n    buttonHeight = event.target.closest(\".vkuiButton\").getBoundingClientRect().height\r\n    positionY = event.target.closest(\".vkuiButton\").getBoundingClientRect().top\r\n    positionX = event.target.closest(\".vkuiButton\").getBoundingClientRect().left\r\n}\r\n\r\nvar tournament = new XMLHttpRequest();\r\n    tournament.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/list/?application_id=132530213b8f23d4c0e1d1f423c307a9&status=upcoming\", false)\r\n    tournament.send();\r\n\r\n    var TournamentList = JSON.parse(tournament.responseText);\r\n\r\n    var tournamentInfo = TournamentList['data'].reduce(\r\n        function(p,e){\r\n            var tournamentInfoRequest = new XMLHttpRequest();\r\n            tournamentInfoRequest.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/info/?application_id=132530213b8f23d4c0e1d1f423c307a9&tournament_id=\" + e.tournament_id + \"&fields=teams\", false)\r\n            tournamentInfoRequest.send();\r\n            p[e[\"tournament_id\"]] = JSON.parse(tournamentInfoRequest.responseText).data[e[\"tournament_id\"]].teams;\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\n    TournamentList['data'].map((elem) => {\r\n        tournamentsID.push(elem.tournament_id)\r\n        sessionStorage.setItem(elem.tournament_id, true)\r\n    })\r\n\r\n    bellArrayButtons = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1) \r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n            else\r\n                p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n            return p\r\n        }, {}\r\n    )\r\n\r\n    bellArrayModalAndroid = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1)\r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n            else\r\n                p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n            return p\r\n        }, {}\r\n    )\r\n\r\n    bellArrayModalIOS = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1)\r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n            else    \r\n                p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n            return p\r\n        }, {}\r\n    )\r\n\r\nclass UpcommingComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            popout: null,\r\n            snackbar: null,\r\n            elem: null,\r\n            bellsButtons: bellArrayButtons,\r\n            bellsAndroid: bellArrayModalAndroid,\r\n            bellsIOS: bellArrayModalIOS\r\n        };\r\n        \r\n        this.sendPost = this.sendPost.bind(this)\r\n        this.shareTargetRef = React.createRef()\r\n        this.shareLink = this.shareLink.bind(this)\r\n\r\n        this.closeActionSheet = () => {\r\n            this.setState({ popout: null })\r\n        }\r\n    \r\n        this.modalBack = () => {\r\n            setTimeout(() => {\r\n                this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n                history.back()\r\n                document.body.style.overflow = \"visible\";\r\n            }, 200)\r\n        };\r\n    }\r\n\r\n    subscribeToNotification(elem) {\r\n        var snackbar\r\n        if (activeBells.indexOf(elem.tournament_id) == -1) {\r\n            subscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.push(elem.tournament_id)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                            duration=\"2000\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Вы будете уведомлены о начале регистрации на турнир\r\n                        </Snackbar>\r\n                    this.setState({snackbar : snackbar})    \r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при подписке на уведомление\r\n                        </Snackbar> \r\n                    this.setState({snackbar : snackbar})       \r\n                })\r\n        } else {\r\n            unsubscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.splice(activeBells.indexOf(elem.tournament_id), 1)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при отписке от уведомления\r\n                        </Snackbar> \r\n                    this.setState({snackbar : snackbar})     \r\n                })\r\n        }\r\n    }\r\n\r\n    buildRequest(elem) {\r\n        let request\r\n        let message = TimeStr(elem.start_at, \"day\") + \" запланирован турнир \\\"\" + elem.title + \"\\\"\" +\r\n                      \"\\n\\nНачало регистрации: \" + TimeStr(elem.registration_start_at, \"dayAndTime\") +\r\n                      \"\\nОкончание регистрации: \" + TimeStr(elem.registration_end_at, \"dayAndTime\") +\r\n                      \"\\n\\nНачало боев: \" + TimeStr(elem.start_at, \"dayAndTime\") +\r\n                      \"\\nПодробнее можно узнать в приложении:\"\r\n        request = {\r\n            \"message\": message,\r\n            \"attachments\": \"https://vk.com/app7446072#\" + elem.tournament_id\r\n        }\r\n        return request\r\n    }\r\n\r\n    sendPost() {\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                Запись опубликована\r\n            </Snackbar> \r\n\r\n        let request = this.buildRequest(this.state.elem)\r\n\r\n        bridge\r\n            .send(\"VKWebAppShowWallPostBox\", request)\r\n            .then(data => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})\r\n            })    \r\n    }\r\n\r\n    shareLink() {\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ссылка скопирована' : 'Ссылка отправлена'}\r\n            </Snackbar> \r\n\r\n        const errorSnackbar =\r\n            <Snackbar\r\n                onClose={() => \r\n                    this.setState({ snackbar: null })\r\n                }\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ошибка при копировании ссылки' : 'Ошибка при отправке ссылки'}\r\n            </Snackbar>\r\n\r\n        let link = \"https://vk.com/app7446072#\" + this.state.elem.tournament_id\r\n\r\n        if (isDesktop) {\r\n            bridge\r\n            .send(\"VKWebAppCopyText\", {text: link})\r\n            .then(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})    \r\n            })   \r\n            .catch(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: errorSnackbar})    \r\n            })    \r\n        } else {\r\n            bridge\r\n            .send(\"VKWebAppShare\", {\"link\": link})\r\n            .then(data => {\r\n                const isDesktop = this.props.viewWidth > ViewWidth.MOBILE\r\n                if (isDesktop) {\r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar: successSnackbar})    \r\n                }\r\n            })\r\n        }       \r\n    }\r\n\r\n    openShareActionSheet(e) {\r\n        getPosition()\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        this.setState({elem: e})\r\n        this.setState({ popout:\r\n            <ActionSheet \r\n                onClose={() => {\r\n                    this.setState({ popout: null })\r\n                    if (!isDesktop) {\r\n                        history.back()\r\n                    }    \r\n                }}\r\n                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n                header=\"Как вы хотите поделиться турниром?\"\r\n                toggleRef={this.shareTargetRef.current}\r\n            >\r\n                <ActionSheetItem autoclose onClick={() => this.sendPost()}>\r\n                    На стене\r\n                </ActionSheetItem>\r\n                <ActionSheetItem autoclose onClick={() => this.shareLink()}>\r\n                    {isDesktop ? 'Скопировать ссылку' : 'Отправить ссылку'}\r\n                </ActionSheetItem>\r\n          </ActionSheet>\r\n        });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n\r\n        if (this.state.activeModal == null) {\r\n            var state = {modal: 'modal'}\r\n            var title = ''\r\n            document.body.style.overflow = \"hidden\";\r\n            history.pushState(state, title)\r\n        }\r\n    };\r\n\r\n    checkSubscriptions() {\r\n        var activeSubscriptions = new XMLHttpRequest()\r\n        activeSubscriptions.open('GET', `https://wotbtournamentvkapp.ru/vkapp/activeSubscriptions${window.location.search}`, true)\r\n        activeSubscriptions.send()\r\n        activeSubscriptions.onload = () => {\r\n            try {\r\n                activeBells = JSON.parse(activeSubscriptions.responseText)  \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            bellArrayButtons = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1) \r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalAndroid = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalIOS = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    else    \r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    return p\r\n                }, {}\r\n            ) \r\n            this.setState({bellsAndroid: bellArrayModalAndroid})\r\n            this.setState({bellsIOS: bellArrayModalIOS})\r\n            this.setState({bellsButtons: bellArrayButtons})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash != '' && !isOpenedFirstTime && tournamentsID.indexOf(Number(window.location.hash.slice(1))) != -1) {\r\n            this.setActiveModal(Number(window.location.hash.slice(1)))\r\n            isOpenedFirstTime = true\r\n        }\r\n        this.checkSubscriptions()\r\n\r\n        windowFocusTime = new Date().getTime()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var elem = document.getElementsByClassName(\"vkuiActionSheet--desktop\")\r\n        if (elem[0]) {\r\n            var observer = new MutationObserver(function(mutations) {\r\n                if (mutations && !stylesIsUpdated) {\r\n                    if (document.documentElement.clientHeight - positionY < 200) {\r\n                        positionY = positionY - elem[0].getBoundingClientRect().height - 5    \r\n                    } else {\r\n                        positionY += buttonHeight + 5    \r\n                    }\r\n                    elem[0].style.top = positionY + \"px\"\r\n                    elem[0].style.left = positionX + \"px\"\r\n                    stylesIsUpdated = true\r\n                } \r\n            });\r\n            \r\n            observer.observe(elem[0], { attributes : true, attributeFilter : ['style'] }); \r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n        })\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            if(!windowFocus && windowFocusCounter < 6) {\r\n                this.checkSubscriptions()\r\n                windowFocus = true\r\n                windowFocusCounter += 1\r\n                var d = new Date().getTime()\r\n                if (d - windowFocusTime > 2500) {\r\n                    windowFocusCounter = 0\r\n                    windowFocusTime = new Date().getTime()\r\n                }\r\n                if (windowFocusCounter == 6) {\r\n                    setTimeout(() => {\r\n                        windowFocusCounter = 0\r\n                    }, 30000)\r\n                } \r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"blur\", () => {\r\n            if(windowFocus) {\r\n                windowFocus = false\r\n            }\r\n        })\r\n\r\n        window.addEventListener('popstate', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n            if (this.state.activeModal != null)\r\n                this.modalBack()    \r\n        })\r\n\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const isMobile = this.props.viewWidth <= ViewWidth.MOBILE;\r\n\r\n        const platform = this.props.platform\r\n\r\n        if (TournamentList.data.length !== 0) {\r\n            const Modal = (\r\n                <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\r\n                    {\r\n                        TournamentList['data'].map((elem) =>\r\n                            <ModalPage id={elem.tournament_id}\r\n                                onClose={this.modalBack}\r\n                                header={\r\n                                    <ModalPageHeader \r\n                                        left={\r\n                                            (isMobile && platform === IOS && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsIOS[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderClose onClick={this.modalBack}></PanelHeaderClose>)\r\n                                        }\r\n                                        right={\r\n                                            isMobile && (platform === IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss/></PanelHeaderButton> )\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (<PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                        }\r\n                                    >\r\n                                        Информация \r\n                                    </ModalPageHeader>\r\n                                }\r\n                            >\r\n                                <div className=\"ModalPage__Content Turnament-Information__Group\">\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <h4>{elem.title}</h4>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Статус</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                Запланирован\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        \r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"green\"}}/><Time timestamp={elem.start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"rgb(200, 0, 0)\"}}/><Time timestamp={elem.end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Команды</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Максимальное число команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].max}\r\n                                            </span>\r\n                                        </div>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <p className=\"Pre\">\r\n                                            {elem.description}\r\n                                        </p>\r\n                                    </Group>\r\n                                </div>\r\n                            </ModalPage>    \r\n                        )\r\n                    }\r\n                </ModalRoot>\r\n            );\r\n            \r\n            var List = (\r\n                <Root modal={Modal} popout={this.state.popout}>\r\n                    <CardGrid size={isDesktop ? \"m\" : \"l\"}>\r\n                        {\r\n                            TournamentList['data'].map((elem) => \r\n                                    <Card mode=\"outline\">\r\n                                            <div className={elem.status + \" border\"}></div>\r\n                                            <div className=\"TournamentCard\">\r\n                                                <div className=\"TournamentCard__Header\">{elem.title}</div>\r\n                                                <div className=\"TornamentCard__Info\">\r\n                                                    <div className=\"TornamentCard__Info-Start\">\r\n                                                        <Icon20CalendarOutline width={23} height={23}/>\r\n                                                        <div className=\"TornamentCard__Info-Start-Text\">\r\n                                                            <Time timestamp={elem.start_at} mode=\"day\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"TournamentCard__Info-Main\">\r\n                                                        <div className=\"TournamentCard__Info-Main-Registration\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                                                </span>\r\n                                                                <br/>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"TournamentCard__Info-Main-Start\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Начало боёв</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16Recent width={17} height={17}/><Time timestamp={elem.start_at} mode=\"dayAndTime\"/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"TornamentCard__Footer\">\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-InfoButton\" mode=\"outline\" before={<Icon16InfoOutline/>} onClick={() => this.setActiveModal(elem.tournament_id)}>Подробнее</Button> \r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" getRootRef={this.shareTargetRef} onClick={() => this.openShareActionSheet(elem)}><Icon16ReplyOutline/></Button>\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsButtons[elem.tournament_id]}</Button>\r\n                                                </div> \r\n                                            </div>\r\n                                    </Card>\r\n                            \r\n                            )\r\n                        }\r\n                    </CardGrid> \r\n                    {this.state.snackbar}\r\n                </Root>\r\n            )\r\n        } else {\r\n            if (this.props.mode == \"none\") {\r\n                List = (<span></span>)\r\n            } else {\r\n                var List = ( <Placeholder>Нет запланированных турниров</Placeholder>);\r\n            }\r\n        }\r\n        return(List);\r\n    }\r\n}\r\n\r\nconst Upcomming = withPlatform(withAdaptivity(UpcommingComponent, { viewWidth: true }))\r\n\r\nexport default Upcomming;","import React from 'react';\r\nimport {ActionSheet, ActionSheetItem, CardGrid, Card, Button, ModalPage, ModalRoot, ModalPageHeader, PanelHeaderButton, Group, Placeholder, Root, withAdaptivity, ViewWidth, withPlatform, IOS, PanelHeaderClose, ANDROID} from \"@vkontakte/vkui\";\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\r\nimport Icon16CheckCircleOutline from '@vkontakte/icons/dist/16/check_circle_outline';\r\nimport Icon16ReplyOutline from '@vkontakte/icons/dist/16/reply_outline';\r\nimport Icon16InfoOutline from '@vkontakte/icons/dist/16/info_outline';\r\nimport Time from \"../time/TimeComponent\";\r\nimport TimeStr from \"../time/TimeString\";\r\nimport {Snackbar, Avatar} from '@vkontakte/vkui'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { Icon24Dismiss } from '@vkontakte/icons';\r\nimport subscribeResult from '../notification/notification_subscribe'\r\nimport unsubscribeResult from '../notification/notification_unsubscribe';\r\nimport { Icon28NotificationAddOutline } from '@vkontakte/icons';\r\nimport { Icon24NotificationCheckOutline } from '@vkontakte/icons';\r\n\r\nvar tournament = new XMLHttpRequest();\r\n    tournament.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/list/?application_id=132530213b8f23d4c0e1d1f423c307a9&status=registration_started\", false)\r\n    tournament.send();\r\n\r\n    var TournamentList = JSON.parse(tournament.responseText);\r\n\r\n    var tournamentInfo = TournamentList['data'].reduce(\r\n        function(p,e){\r\n            var tournamentInfoRequest = new XMLHttpRequest();\r\n            tournamentInfoRequest.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/info/?application_id=132530213b8f23d4c0e1d1f423c307a9&tournament_id=\" + e.tournament_id + \"&fields=teams\", false)\r\n            tournamentInfoRequest.send();\r\n            p[e[\"tournament_id\"]] = JSON.parse(tournamentInfoRequest.responseText).data[e[\"tournament_id\"]].teams;\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nvar isOpenedFirstTime = false \r\nvar tournamentsID = []  \r\nvar positionY \r\nvar positionX\r\nvar stylesIsUpdated\r\nvar buttonHeight\r\nvar bellArrayButtons = {}\r\nvar bellArrayModalAndroid = {}\r\nvar bellArrayModalIOS = {}\r\nvar activeBells = []\r\nvar windowFocus = false\r\nvar windowFocusCounter = 0\r\nvar windowFocusTime\r\n\r\nTournamentList['data'].map((elem) => {\r\n    tournamentsID.push(elem.tournament_id)\r\n    sessionStorage.setItem(elem.tournament_id, true)\r\n})\r\n\r\nfunction getPosition() {\r\n    stylesIsUpdated = false\r\n    buttonHeight = event.target.closest(\".vkuiButton\").getBoundingClientRect().height\r\n    positionY = event.target.closest(\".vkuiButton\").getBoundingClientRect().top\r\n    positionX = event.target.closest(\".vkuiButton\").getBoundingClientRect().left\r\n}  \r\n\r\nbellArrayButtons = TournamentList['data'].reduce(\r\n    (p, e) => {\r\n        if (activeBells.indexOf(e.tournament_id) != -1) \r\n            p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n        else\r\n            p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n        return p\r\n    }, {}\r\n)\r\n\r\nbellArrayModalAndroid = TournamentList['data'].reduce(\r\n    (p, e) => {\r\n        if (activeBells.indexOf(e.tournament_id) != -1)\r\n            p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n        else\r\n            p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n        return p\r\n    }, {}\r\n)\r\n\r\nbellArrayModalIOS = TournamentList['data'].reduce(\r\n    (p, e) => {\r\n        if (activeBells.indexOf(e.tournament_id) != -1)\r\n            p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n        else    \r\n            p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n        return p\r\n    }, {}\r\n)\r\n\r\nclass RegStartComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            popout: null,\r\n            snackbar: null,\r\n            elem: null,\r\n            bellsButtons: bellArrayButtons,\r\n            bellsAndroid: bellArrayModalAndroid,\r\n            bellsIOS: bellArrayModalIOS\r\n        };\r\n\r\n        this.shareTargetRef = React.createRef();\r\n        this.sendPost = this.sendPost.bind(this)\r\n        this.shareLink = this.shareLink.bind(this)\r\n\r\n        this.closeActionSheet = () => {\r\n            this.setState({ popout: null })\r\n        }\r\n    \r\n        this.modalBack = () => {\r\n            setTimeout(() => {\r\n                this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n                history.back()\r\n                document.body.style.overflow = \"visible\";\r\n            }, 300)\r\n        };\r\n    }\r\n\r\n    subscribeToNotification(elem) {\r\n        var snackbar\r\n        if (activeBells.indexOf(elem.tournament_id) == -1) {\r\n            subscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.push(elem.tournament_id)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                            duration=\"2000\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Вы будете уведомлены о начале боёв турнира\r\n                        </Snackbar>\r\n                    this.setState({snackbar : snackbar})    \r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при подписке на уведомление\r\n                        </Snackbar> \r\n                    this.setState({snackbar : snackbar})       \r\n                })\r\n        } else {\r\n            unsubscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.splice(activeBells.indexOf(elem.tournament_id), 1)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при отписке от уведомления\r\n                        </Snackbar> \r\n                    this.setState({snackbar : snackbar})     \r\n                })\r\n        }\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n\r\n        if (this.state.activeModal == null) {\r\n            var state = {modal: 'modal'}\r\n            var title = ''\r\n            document.body.style.overflow = \"hidden\";\r\n            history.pushState(state, title)\r\n        }\r\n    };\r\n\r\n    buildRequest(elem) {\r\n        let request\r\n        let message =   \"Началась регистрация на турнир \\\"\" + elem.title + \"\\\"\" +\r\n                        \"\\nОкончание регистрации: \" + TimeStr(elem.registration_end_at, \"dayAndTime\") +\r\n                        \"\\nНачало боев: \" + TimeStr(elem.start_at, \"dayAndTime\") +\r\n                        \"\\nПодробнее можно узнать в приложении:\"\r\n        request = {\r\n            \"message\": message,\r\n            \"attachments\": \"https://vk.com/app7446072#\" + elem.tournament_id\r\n        }\r\n        return request\r\n    }\r\n\r\n    sendPost() {\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                Запись опубликована\r\n            </Snackbar> \r\n\r\n        let request = this.buildRequest(this.state.elem)\r\n        bridge\r\n        .send(\"VKWebAppShowWallPostBox\", request)\r\n        .then(data => {\r\n            if (this.state.snackbar) return\r\n            this.setState({snackbar: successSnackbar})\r\n        })     \r\n    }\r\n\r\n    shareLink() {\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ссылка скопирована' : 'Ссылка отправлена'}\r\n            </Snackbar> \r\n\r\n        const errorSnackbar =\r\n            <Snackbar\r\n                onClose={() => \r\n                    this.setState({ snackbar: null })\r\n                }\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ошибка при копировании ссылки' : 'Ошибка при отправке ссылки'}\r\n            </Snackbar>\r\n\r\n        let link = \"https://vk.com/app7446072#\" + this.state.elem.tournament_id\r\n\r\n        if (isDesktop) {\r\n            bridge\r\n            .send(\"VKWebAppCopyText\", {text: link})\r\n            .then(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})    \r\n            })   \r\n            .catch(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: errorSnackbar})    \r\n            })     \r\n        } else {\r\n            bridge\r\n            .send(\"VKWebAppShare\", {\"link\": link})\r\n            .then(data => {\r\n                const isDesktop = this.props.viewWidth > ViewWidth.MOBILE\r\n                if (isDesktop) {\r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar: successSnackbar})    \r\n                }\r\n            })\r\n        }         \r\n    }\r\n\r\n    openShareActionSheet(e) {\r\n        getPosition()\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        this.setState({elem: e})\r\n        this.setState({ popout:\r\n            <ActionSheet \r\n                onClose={() => {\r\n                    this.setState({ popout: null })\r\n                    if (!isDesktop) {\r\n                        history.back()\r\n                    }    \r\n                }}\r\n                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n                header=\"Как вы хотите поделиться турниром?\"\r\n                toggleRef={this.shareTargetRef.current}\r\n            >\r\n                <ActionSheetItem autoclose onClick={() => this.sendPost()}>\r\n                    На стене\r\n                </ActionSheetItem>\r\n                <ActionSheetItem autoclose onClick={() => this.shareLink()}>\r\n                    {isDesktop ? 'Скопировать ссылку' : 'Отправить ссылку'}\r\n                </ActionSheetItem>\r\n          </ActionSheet>\r\n        });\r\n    }\r\n\r\n    checkSubscriptions() {\r\n        var activeSubscriptions = new XMLHttpRequest()\r\n        activeSubscriptions.open('GET', `https://wotbtournamentvkapp.ru/vkapp/activeSubscriptions${window.location.search}`, true)\r\n        activeSubscriptions.send()\r\n        activeSubscriptions.onload = () => {\r\n            try {\r\n                activeBells = JSON.parse(activeSubscriptions.responseText)  \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            bellArrayButtons = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1) \r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalAndroid = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalIOS = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    else    \r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    return p\r\n                }, {}\r\n            ) \r\n            this.setState({bellsAndroid: bellArrayModalAndroid})\r\n            this.setState({bellsIOS: bellArrayModalIOS})\r\n            this.setState({bellsButtons: bellArrayButtons})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash != '' && !isOpenedFirstTime && tournamentsID.indexOf(Number(window.location.hash.slice(1))) != -1) {\r\n            this.setActiveModal(Number(window.location.hash.slice(1)))\r\n            isOpenedFirstTime = true\r\n        }\r\n        this.checkSubscriptions()\r\n        windowFocusTime = new Date().getTime()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var elem = document.getElementsByClassName(\"vkuiActionSheet--desktop\")\r\n        if (elem[0]) {\r\n            var observer = new MutationObserver(function(mutations) {\r\n                if (mutations && !stylesIsUpdated) {\r\n                    if (document.documentElement.clientHeight - positionY < 200) {\r\n                        positionY = positionY - elem[0].getBoundingClientRect().height - 5    \r\n                    } else {\r\n                        positionY += buttonHeight + 5\r\n                    }\r\n                    elem[0].style.top = positionY + \"px\"\r\n                    elem[0].style.left = positionX + \"px\"\r\n                    stylesIsUpdated = true\r\n                } \r\n            });\r\n            \r\n            observer.observe(elem[0], { attributes : true, attributeFilter : ['style'] }); \r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n        })\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            if(!windowFocus && windowFocusCounter < 6) {\r\n                this.checkSubscriptions()\r\n                windowFocus = true\r\n                windowFocusCounter += 1\r\n                var d = new Date().getTime()\r\n                if (d - windowFocusTime > 2500) {\r\n                    windowFocusCounter = 0\r\n                    windowFocusTime = new Date().getTime()\r\n                }\r\n                if (windowFocusCounter == 6) {\r\n                    setTimeout(() => {\r\n                        windowFocusCounter = 0\r\n                    }, 30000)\r\n                } \r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"blur\", () => {\r\n            if(windowFocus) {\r\n                windowFocus = false\r\n            }\r\n        })\r\n\r\n        window.addEventListener('popstate', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n            if (this.state.activeModal != null)\r\n                this.modalBack()\r\n        })\r\n\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const isMobile = this.props.viewWidth <= ViewWidth.MOBILE;\r\n\r\n        const platform = this.props.platform\r\n\r\n        if (TournamentList.data.length !== 0) {\r\n            const Modal = (\r\n                <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\r\n                    {\r\n                        TournamentList['data'].map((elem) =>\r\n                            <ModalPage id={elem.tournament_id}\r\n                                onClose={this.modalBack}\r\n                                header={\r\n                                    <ModalPageHeader \r\n                                        left={\r\n                                            (isMobile && platform === IOS && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsIOS[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderClose onClick={this.modalBack}></PanelHeaderClose>)\r\n                                        }\r\n                                        right={\r\n                                            isMobile && (platform === IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss/></PanelHeaderButton> )\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (<PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                        }\r\n                                    >\r\n                                        Информация \r\n                                    </ModalPageHeader>\r\n                                }\r\n                            >\r\n                                <div className=\"ModalPage__Content Turnament-Information__Group\">\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <h4>{elem.title}</h4>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Статус</div>\r\n                                            <div style={{marginLeft: 5}}>\r\n                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                    Идёт регистрация\r\n                                                </span>\r\n                                            </div>\r\n                                        <br/>\r\n\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        \r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"green\"}}/><Time timestamp={elem.start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"rgb(200, 0, 0)\"}}/><Time timestamp={elem.end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Команды</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Максимальное число команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].max}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Создано команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].total}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Подтвердило участие:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].confirmed == null ? 0 : tournamentInfo[elem[\"tournament_id\"]].confirmed}\r\n                                            </span>\r\n                                        </div>\r\n                                        \r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <p className=\"Pre\">\r\n                                            {elem.description}\r\n                                        </p>\r\n                                    </Group>\r\n                                </div>\r\n                            </ModalPage>    \r\n                        )\r\n                    }\r\n                </ModalRoot>\r\n            );\r\n            \r\n            var List = (\r\n                <Root modal={Modal} popout={this.state.popout}>\r\n                    <CardGrid size={isDesktop ? \"m\" : \"l\"}>\r\n                        {\r\n                            TournamentList['data'].map((elem) => \r\n                                    <Card mode=\"outline\">\r\n                                            <div className={elem.status + \" border\"}></div>\r\n                                            <div className=\"TournamentCard\">\r\n                                                <div className=\"TournamentCard__Header\">{elem.title}</div>\r\n                                                <div className=\"TornamentCard__Info\">\r\n                                                    <div className=\"TornamentCard__Info-Start\">\r\n                                                        <Icon20CalendarOutline width={23} height={23}/>\r\n                                                        <div className=\"TornamentCard__Info-Start-Text\">\r\n                                                            <Time timestamp={elem.start_at} mode=\"day\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"TournamentCard__Info-Main\">\r\n                                                        <div className=\"TournamentCard__Info-Main-Registration\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                                                </span>\r\n                                                                <br/>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"TournamentCard__Info-Main-Start\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Начало боёв</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16Recent width={17} height={17}/><Time timestamp={elem.start_at} mode=\"dayAndTime\"/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"TornamentCard__Footer\">\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-InfoButton\" mode=\"outline\" before={<Icon16InfoOutline/>} onClick={() => this.setActiveModal(elem.tournament_id)}>Подробнее</Button> \r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" getRootRef={this.shareTargetRef} onClick={() => this.openShareActionSheet(elem)}><Icon16ReplyOutline/></Button>\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\"onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsButtons[elem.tournament_id]}</Button>\r\n                                                </div> \r\n                                            </div>\r\n                                    </Card>\r\n                                \r\n                            )\r\n                        }\r\n                    </CardGrid>\r\n                    {this.state.snackbar}\r\n                </Root>\r\n            )\r\n        } else {\r\n            if (this.props.mode == \"none\") {\r\n                List = (<span></span>)\r\n            } else {\r\n                var List = ( <Placeholder>Нет турниров с начавшейся регистрацией</Placeholder>);\r\n            }\r\n        }\r\n        return(List);\r\n    }\r\n}\r\n\r\nconst RegStart = withPlatform(withAdaptivity(RegStartComponent, {viewWidth: true}))\r\n\r\nexport default RegStart;","import React from 'react';\r\nimport {Root, CardGrid, Card, Button, ModalPage, ModalRoot, ModalPageHeader, PanelHeaderButton, Group, Placeholder, withAdaptivity, ViewWidth, withPlatform, IOS, ANDROID, PanelHeaderClose} from \"@vkontakte/vkui\";\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\r\nimport Icon16CheckCircleOutline from '@vkontakte/icons/dist/16/check_circle_outline';\r\nimport Icon16ReplyOutline from '@vkontakte/icons/dist/16/reply_outline';\r\nimport Icon16InfoOutline from '@vkontakte/icons/dist/16/info_outline';\r\nimport Time from \"../time/TimeComponent\";\r\nimport TimeStr from \"../time/TimeString\";\r\nimport {Snackbar, Avatar, ActionSheetItem, ActionSheet} from '@vkontakte/vkui'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { Icon24Dismiss } from '@vkontakte/icons';\r\nimport subscribeResult from '../notification/notification_subscribe'\r\nimport unsubscribeResult from '../notification/notification_unsubscribe';\r\nimport { Icon28NotificationAddOutline } from '@vkontakte/icons';\r\nimport { Icon24NotificationCheckOutline } from '@vkontakte/icons';\r\n\r\nvar tournament = new XMLHttpRequest();\r\n    tournament.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/list/?application_id=132530213b8f23d4c0e1d1f423c307a9&status=registration_finished\", false)\r\n    tournament.send();\r\n\r\n    var TournamentList = JSON.parse(tournament.responseText);\r\n\r\n    var tournamentInfo = TournamentList['data'].reduce(\r\n        function(p,e){\r\n            var tournamentInfoRequest = new XMLHttpRequest();\r\n            tournamentInfoRequest.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/info/?application_id=132530213b8f23d4c0e1d1f423c307a9&tournament_id=\" + e.tournament_id + \"&fields=teams\", false)\r\n            tournamentInfoRequest.send();\r\n            p[e[\"tournament_id\"]] = JSON.parse(tournamentInfoRequest.responseText).data[e[\"tournament_id\"]].teams;\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\n    var isOpenedFirstTime = false \r\n    var tournamentsID = []  \r\n    var positionY \r\n    var positionX\r\n    var stylesIsUpdated\r\n    var buttonHeight\r\n    var bellArrayButtons = {}\r\n    var bellArrayModalAndroid = {}\r\n    var bellArrayModalIOS = {}\r\n    var activeBells = []\r\n    var windowFocus = false\r\n    var windowFocusCounter = 0\r\n    var windowFocusTime\r\n\r\n    function getPosition() {\r\n        stylesIsUpdated = false\r\n        buttonHeight = event.target.closest(\".vkuiButton\").getBoundingClientRect().height\r\n        positionY = event.target.closest(\".vkuiButton\").getBoundingClientRect().top\r\n        positionX = event.target.closest(\".vkuiButton\").getBoundingClientRect().left\r\n    }\r\n    \r\n    TournamentList['data'].map((elem) => {\r\n        tournamentsID.push(elem.tournament_id)\r\n        sessionStorage.setItem(elem.tournament_id, true)\r\n    })\r\n\r\n    bellArrayButtons = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1) \r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n            else\r\n                p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n            return p\r\n        }, {}\r\n    )\r\n\r\n    bellArrayModalAndroid = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1)\r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n            else\r\n                p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n            return p\r\n        }, {}\r\n    )\r\n\r\n    bellArrayModalIOS = TournamentList['data'].reduce(\r\n        (p, e) => {\r\n            if (activeBells.indexOf(e.tournament_id) != -1)\r\n                p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n            else    \r\n                p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n            return p\r\n        }, {}\r\n    )\r\n    \r\n\r\nclass RegFinishComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            activeModal: null,\r\n            modalHistory: [],\r\n            popout: null,\r\n            snackbar: null,\r\n            elem: null,\r\n            bellsButtons: bellArrayButtons,\r\n            bellsAndroid: bellArrayModalAndroid,\r\n            bellsIOS: bellArrayModalIOS\r\n        };\r\n\r\n        this.sendPost = this.sendPost.bind(this)\r\n        this.shareTargetRef = React.createRef();\r\n        this.shareLink = this.shareLink.bind(this)\r\n\r\n        this.closeActionSheet = () => {\r\n            this.setState({ popout: null })\r\n        }\r\n    \r\n        this.modalBack = () => {\r\n            setTimeout(() => {\r\n                this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n                history.back()\r\n                document.body.style.overflow = \"visible\";\r\n            }, 200)\r\n        };\r\n    }\r\n\r\n    subscribeToNotification(elem) {\r\n        var snackbar\r\n        if (activeBells.indexOf(elem.tournament_id) == -1) {\r\n            subscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.push(elem.tournament_id)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => this.setState({ snackbar: null })}\r\n                            duration=\"2000\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Вы будете уведомлены о начале боёв турнира\r\n                        </Snackbar>\r\n                    this.setState({snackbar : snackbar})    \r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при подписке на уведомление\r\n                        </Snackbar> \r\n                    this.setState({snackbar : snackbar})       \r\n                })\r\n        } else {\r\n            unsubscribeResult(elem)\r\n                .then(() => {\r\n                    activeBells.splice(activeBells.indexOf(elem.tournament_id), 1)\r\n                    bellArrayModalAndroid[elem.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    bellArrayModalIOS[elem.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    bellArrayButtons[elem.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    this.setState({bellsAndroid: bellArrayModalAndroid})\r\n                    this.setState({bellsIOS: bellArrayModalIOS})\r\n                    this.setState({bellsButtons: bellArrayButtons})\r\n                })\r\n                .catch(() => {\r\n                    snackbar =\r\n                        <Snackbar\r\n                            onClose={() => \r\n                                this.setState({ snackbar: null })\r\n                            }\r\n                            duration=\"1500\"\r\n                            before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                        >\r\n                            Ошибка при отписке от уведомления\r\n                        </Snackbar> \r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar : snackbar})     \r\n                })\r\n        }\r\n    }\r\n\r\n    buildRequest(elem) {\r\n        let request\r\n        let message = \"Завершилась регистрация на турнир \\\"\" + elem.title + \"\\\"\" +\r\n                      \"\\nНачало боев: \" + TimeStr(elem.start_at) +\r\n                      \"\\nПодробнее можно узнать в приложении:\"\r\n        request = {\r\n            \"message\": message,\r\n            \"attachments\": \"https://vk.com/app7446072#\" + elem.tournament_id\r\n        }\r\n        return request\r\n    }\r\n\r\n    sendPost() {\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                Запись опубликована\r\n            </Snackbar> \r\n\r\n        let request = this.buildRequest(this.state.elem)\r\n\r\n        bridge\r\n            .send(\"VKWebAppShowWallPostBox\", request)\r\n            .then(data => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})\r\n            })      \r\n    }\r\n\r\n    shareLink() {\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ссылка скопирована' : 'Ссылка отправлена'}\r\n            </Snackbar> \r\n\r\n        const errorSnackbar =\r\n            <Snackbar\r\n                onClose={() => \r\n                    this.setState({ snackbar: null })\r\n                }\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ошибка при копировании ссылки' : 'Ошибка при отправке ссылки'}\r\n            </Snackbar>\r\n\r\n        let link = \"https://vk.com/app7446072#\" + this.state.elem.tournament_id\r\n\r\n        if (isDesktop) {\r\n            bridge\r\n            .send(\"VKWebAppCopyText\", {text: link})\r\n            .then(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})    \r\n            })   \r\n            .catch(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: errorSnackbar})    \r\n            })    \r\n        } else {\r\n            bridge\r\n            .send(\"VKWebAppShare\", {\"link\": link})\r\n            .then(data => {\r\n                const isDesktop = this.props.viewWidth > ViewWidth.MOBILE\r\n                if (isDesktop) {\r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar: successSnackbar})    \r\n                }\r\n            })\r\n        }         \r\n    }\r\n\r\n    openShareActionSheet(e) {\r\n        getPosition()\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        this.setState({elem: e})\r\n        this.setState({ popout:\r\n            <ActionSheet \r\n                onClose={() => {\r\n                    this.setState({ popout: null })\r\n                    if (!isDesktop) {\r\n                        history.back()\r\n                    }    \r\n                }}\r\n                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n                header=\"Как вы хотите поделиться турниром?\"\r\n                toggleRef={this.shareTargetRef.current}\r\n            >\r\n                <ActionSheetItem autoclose onClick={() => this.sendPost()}>\r\n                    На стене\r\n                </ActionSheetItem>\r\n                <ActionSheetItem autoclose onClick={() => this.shareLink()}>\r\n                    {isDesktop ? 'Скопировать ссылку' : 'Отправить ссылку'}\r\n                </ActionSheetItem>\r\n          </ActionSheet>\r\n        });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n            activeModal,\r\n            modalHistory\r\n        });\r\n\r\n        if (this.state.activeModal == null) {\r\n            var state = {modal: 'modal'}\r\n            var title = ''\r\n            document.body.style.overflow = \"hidden\";\r\n            history.pushState(state, title)\r\n        }\r\n    };\r\n\r\n    checkSubscriptions() {\r\n        var activeSubscriptions = new XMLHttpRequest()\r\n        activeSubscriptions.open('GET', `https://wotbtournamentvkapp.ru/vkapp/activeSubscriptions${window.location.search}`, true)\r\n        activeSubscriptions.send()\r\n        activeSubscriptions.onload = () => {\r\n            try {\r\n                activeBells = JSON.parse(activeSubscriptions.responseText)  \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            bellArrayButtons = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1) \r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={19} height={21}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={19} height={21}/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalAndroid = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline width={28} height={28}/>\r\n                    else\r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline/>\r\n                    return p\r\n                }, {}\r\n            )\r\n            bellArrayModalIOS = TournamentList['data'].reduce(\r\n                (p, e) => {\r\n                    if (activeBells.indexOf(e.tournament_id) != -1)\r\n                        p[e.tournament_id] = <Icon24NotificationCheckOutline/>\r\n                    else    \r\n                        p[e.tournament_id] = <Icon28NotificationAddOutline width={24} height={24}/>\r\n                    return p\r\n                }, {}\r\n            ) \r\n            this.setState({bellsAndroid: bellArrayModalAndroid})\r\n            this.setState({bellsIOS: bellArrayModalIOS})\r\n            this.setState({bellsButtons: bellArrayButtons})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash != '' && !isOpenedFirstTime && tournamentsID.indexOf(Number(window.location.hash.slice(1))) != -1) {\r\n            this.setActiveModal(Number(window.location.hash.slice(1)))\r\n            isOpenedFirstTime = true\r\n        }\r\n        this.checkSubscriptions()\r\n        windowFocusTime = new Date().getTime()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var elem = document.getElementsByClassName(\"vkuiActionSheet--desktop\")\r\n        if (elem[0]) {\r\n            var observer = new MutationObserver(function(mutations) {\r\n                if (mutations && !stylesIsUpdated) {\r\n                    if (document.documentElement.clientHeight - positionY < 150) {\r\n                        positionY = positionY - elem[0].getBoundingClientRect().height - 5    \r\n                    } else {\r\n                        positionY += buttonHeight + 5\r\n                    }\r\n                    elem[0].style.top = positionY + \"px\"\r\n                    elem[0].style.left = positionX + \"px\"\r\n                    stylesIsUpdated = true\r\n                } \r\n            });\r\n            \r\n            observer.observe(elem[0], { attributes : true, attributeFilter : ['style'] }); \r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n        })\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            if(!windowFocus && windowFocusCounter < 6) {\r\n                this.checkSubscriptions()\r\n                windowFocus = true\r\n                windowFocusCounter += 1\r\n                var d = new Date().getTime()\r\n                if (d - windowFocusTime > 2500) {\r\n                    windowFocusCounter = 0\r\n                    windowFocusTime = new Date().getTime()\r\n                }\r\n                if (windowFocusCounter == 6) {\r\n                    setTimeout(() => {\r\n                        windowFocusCounter = 0\r\n                    }, 30000)\r\n                } \r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"blur\", () => {\r\n            if(windowFocus) {\r\n                windowFocus = false\r\n            }\r\n        })\r\n\r\n        window.addEventListener('popstate', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n            if (this.state.activeModal != null)\r\n                this.modalBack()\r\n        })\r\n\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const isMobile = this.props.viewWidth <= ViewWidth.MOBILE;\r\n\r\n        const platform = this.props.platform\r\n\r\n        if (TournamentList.data.length !== 0) {\r\n            const Modal = (\r\n                <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\r\n                    {\r\n                        TournamentList['data'].map((elem) =>\r\n                            <ModalPage id={elem.tournament_id}\r\n                                onClose={this.modalBack}\r\n                                header={\r\n                                    <ModalPageHeader\r\n                                        left={\r\n                                            (isMobile && platform === IOS && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsIOS[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderClose onClick={this.modalBack}></PanelHeaderClose>)\r\n                                        }\r\n                                        right={\r\n                                            isMobile && (platform === IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss/></PanelHeaderButton> )\r\n                                            ||\r\n                                            (isMobile && platform === ANDROID && <PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                            ||\r\n                                            (<PanelHeaderButton onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsAndroid[elem.tournament_id]}</PanelHeaderButton>)\r\n                                        }\r\n                                    >\r\n                                        Информация \r\n                                    </ModalPageHeader>\r\n                                }\r\n                            >\r\n                                <div className=\"ModalPage__Content Turnament-Information__Group\">\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <h4>{elem.title}</h4>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Статус</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                Регистрация завершена\r\n                                            </span>\r\n                                        </div>    \r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"green\"}}/><Time timestamp={elem.start_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"rgb(200, 0, 0)\"}}/><Time timestamp={elem.end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Команды</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Максимальное число команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].max}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Создано команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].total}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Подтвердило участие:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].confirmed}\r\n                                            </span>\r\n                                        </div>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <p className=\"Pre\">\r\n                                            {elem.description}\r\n                                        </p>\r\n                                    </Group>\r\n                                </div>\r\n                            </ModalPage>    \r\n                        )\r\n                    }\r\n                </ModalRoot>\r\n            );\r\n            \r\n            var List = (\r\n                <Root modal={Modal} popout={this.state.popout}>\r\n                    <CardGrid size={isDesktop ? \"m\" : \"l\"}>\r\n                        {\r\n                            TournamentList['data'].map((elem) => \r\n                                    <Card mode=\"outline\">\r\n                                            <div className={elem.status + \" border\"}></div>\r\n                                            <div className=\"TournamentCard\">\r\n                                                <div className=\"TournamentCard__Header\">{elem.title}</div>\r\n                                                <div className=\"TornamentCard__Info\">\r\n                                                    <div className=\"TornamentCard__Info-Start\">\r\n                                                        <Icon20CalendarOutline width={23} height={23}/>\r\n                                                        <div className=\"TornamentCard__Info-Start-Text\">\r\n                                                            <Time timestamp={elem.start_at} mode=\"day\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"TournamentCard__Info-Main TournamentCard__Info-Main-OneItem\">\r\n                                                        <div className=\"TournamentCard__Info-Main-Start\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Начало боёв</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.start_at}/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"TornamentCard__Footer\">\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-InfoButton\" mode=\"outline\" before={<Icon16InfoOutline/>} onClick={() => this.setActiveModal(elem.tournament_id)}>Подробнее</Button> \r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" getRootRef={this.shareTargetRef} onClick={() => this.openShareActionSheet(elem)}><Icon16ReplyOutline/></Button>\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\"onClick={() => this.subscribeToNotification(elem)}>{this.state.bellsButtons[elem.tournament_id]}</Button>\r\n                                                </div> \r\n                                            </div>\r\n                                    </Card>\r\n                                \r\n                            )\r\n                        }\r\n                    </CardGrid>\r\n                    {this.state.snackbar} \r\n                </Root>\r\n            )\r\n        } else {\r\n            if (this.props.mode == \"none\") {\r\n                List = (<span></span>)\r\n            } else {\r\n                var List = ( <Placeholder>Нет турниров с завершённой регистрацией</Placeholder>);\r\n            }\r\n        }\r\n        return(List);\r\n    }\r\n}\r\n\r\nconst RegFinish = withPlatform(withAdaptivity(RegFinishComponent, {viewWidth: true}))\r\n\r\nexport default RegFinish;","import React from 'react';\r\nimport {ActionSheet, Root, ActionSheetItem, CardGrid, Card, Button, ModalPage, ModalRoot, ModalPageHeader, PanelHeaderButton, Group, Placeholder, ViewWidth, withAdaptivity, withPlatform, ANDROID, PanelHeaderClose, IOS} from \"@vkontakte/vkui\";\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\r\nimport Icon16ReplyOutline from '@vkontakte/icons/dist/16/reply_outline';\r\nimport Icon16InfoOutline from '@vkontakte/icons/dist/16/info_outline';\r\nimport Icon16CheckCircleOutline from '@vkontakte/icons/dist/16/check_circle_outline';\r\nimport Time from \"../time/TimeComponent\";\r\nimport TimeStr from \"../time/TimeString\";\r\nimport {Snackbar, Avatar} from '@vkontakte/vkui'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { Icon24Dismiss } from '@vkontakte/icons';\r\n\r\nvar tournament = new XMLHttpRequest();\r\n    tournament.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/list/?application_id=132530213b8f23d4c0e1d1f423c307a9&status=running\", false)\r\n    tournament.send();\r\n\r\n    var TournamentList = JSON.parse(tournament.responseText);\r\n    var tournamentInfo = TournamentList['data'].reduce(\r\n        function(p,e){\r\n            var tournamentInfoRequest = new XMLHttpRequest();\r\n            tournamentInfoRequest.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/info/?application_id=132530213b8f23d4c0e1d1f423c307a9&tournament_id=\" + e.tournament_id + \"&fields=teams\", false)\r\n            tournamentInfoRequest.send();\r\n            p[e[\"tournament_id\"]] = JSON.parse(tournamentInfoRequest.responseText).data[e[\"tournament_id\"]].teams;\r\n            return p;\r\n        },\r\n        {}\r\n    );\r\n\r\nvar isOpenedFirstTime = false \r\nvar tournamentsID = []  \r\nvar positionY \r\nvar positionX\r\nvar stylesIsUpdated\r\nvar buttonHeight\r\n\r\nTournamentList['data'].map((elem) => {\r\n    tournamentsID.push(elem.tournament_id)\r\n    sessionStorage.setItem(elem.tournament_id, true)\r\n})\r\n\r\nfunction getPosition() {\r\n    stylesIsUpdated = false\r\n    buttonHeight = event.target.closest(\".vkuiButton\").getBoundingClientRect().height\r\n    positionY = event.target.closest(\".vkuiButton\").getBoundingClientRect().top\r\n    positionX = event.target.closest(\".vkuiButton\").getBoundingClientRect().left\r\n}   \r\n\r\nclass RunningComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          activeModal: null,\r\n          modalHistory: [],\r\n          popout: null,\r\n          snackbar: null,\r\n          elem: null\r\n        };\r\n\r\n        this.shareTargetRef = React.createRef();\r\n        this.sendPost = this.sendPost.bind(this)\r\n        this.shareLink = this.shareLink.bind(this)\r\n\r\n        this.closeActionSheet = () => {\r\n            this.setState({ popout: null })\r\n        }\r\n    \r\n        this.modalBack = () => {\r\n            setTimeout(() => {\r\n                this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n                history.back()\r\n                document.body.style.overflow = \"visible\";\r\n            }, 200)\r\n        };\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n          modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n          modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n          modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n          activeModal,\r\n          modalHistory\r\n        });\r\n\r\n        if (this.state.activeModal == null) {\r\n            var state = {modal: 'modal'}\r\n            var title = ''\r\n            document.body.style.overflow = \"hidden\";\r\n            history.pushState(state, title)\r\n        }\r\n    };\r\n\r\n    buildRequest(elem) {\r\n        let request\r\n        let message =   \"Начался турнир \\\"\" + elem.title + \"\\\"\" +\r\n                        \"\\nОкончание боев: \" + TimeStr(elem.end_at, \"dayAndTime\") +\r\n                        \"\\nПодробнее можно узнать в приложении:\"\r\n        request = {\r\n            \"message\": message,\r\n            \"attachments\": \"https://vk.com/app7446072#\" + elem.tournament_id\r\n        }\r\n        return request\r\n    }\r\n\r\n    sendPost() {\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                Запись опубликована\r\n            </Snackbar> \r\n\r\n        let request = this.buildRequest(this.state.elem)\r\n        bridge\r\n        .send(\"VKWebAppShowWallPostBox\", request)\r\n        .then(data => {\r\n            if (this.state.snackbar) return\r\n            this.setState({snackbar: successSnackbar})\r\n        })     \r\n    }\r\n\r\n    shareLink() {\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ссылка скопирована' : 'Ссылка отправлена'}\r\n            </Snackbar> \r\n\r\n        const errorSnackbar =\r\n            <Snackbar\r\n                onClose={() => \r\n                    this.setState({ snackbar: null })\r\n                }\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ошибка при копировании ссылки' : 'Ошибка при отправке ссылки'}\r\n            </Snackbar>\r\n\r\n        let link = \"https://vk.com/app7446072#\" + this.state.elem.tournament_id\r\n\r\n        if (isDesktop) {\r\n            bridge\r\n            .send(\"VKWebAppCopyText\", {text: link})\r\n            .then(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})    \r\n            })   \r\n            .catch(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: errorSnackbar})    \r\n            })    \r\n        } else {\r\n            bridge\r\n            .send(\"VKWebAppShare\", {\"link\": link})\r\n            .then(data => {\r\n                const isDesktop = this.props.viewWidth > ViewWidth.MOBILE\r\n                if (isDesktop) {\r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar: successSnackbar})    \r\n                }\r\n            })\r\n        }        \r\n    }\r\n\r\n    openShareActionSheet(e) {\r\n        getPosition()\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        this.setState({elem: e})\r\n        this.setState({ popout:\r\n            <ActionSheet \r\n                onClose={() => {\r\n                    this.setState({ popout: null })\r\n                    if (!isDesktop) {\r\n                        history.back()\r\n                    }    \r\n                }}\r\n                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n                header=\"Как вы хотите поделиться турниром?\"\r\n                toggleRef={this.shareTargetRef.current}\r\n            >\r\n                <ActionSheetItem autoclose onClick={() => this.sendPost()}>\r\n                    На стене\r\n                </ActionSheetItem>\r\n                <ActionSheetItem autoclose onClick={() => this.shareLink()}>\r\n                    {isDesktop ? 'Скопировать ссылку' : 'Отправить ссылку'}\r\n                </ActionSheetItem>\r\n          </ActionSheet>\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash != '' && !isOpenedFirstTime && tournamentsID.indexOf(Number(window.location.hash.slice(1))) != -1) {\r\n            this.setActiveModal(Number(window.location.hash.slice(1)))\r\n            isOpenedFirstTime = true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var elem = document.getElementsByClassName(\"vkuiActionSheet--desktop\")\r\n        if (elem[0]) {\r\n            var observer = new MutationObserver(function(mutations) {\r\n                if (mutations && !stylesIsUpdated) {\r\n                    if (document.documentElement.clientHeight - positionY < 200) {\r\n                        positionY = positionY - elem[0].getBoundingClientRect().height - 5    \r\n                    } else {\r\n                        positionY += buttonHeight + 5    \r\n                    }\r\n                    elem[0].style.top = positionY + \"px\"\r\n                    elem[0].style.left = positionX + \"px\"\r\n                    stylesIsUpdated = true\r\n                } \r\n            });\r\n            \r\n            observer.observe(elem[0], { attributes : true, attributeFilter : ['style'] }); \r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n        })\r\n\r\n        window.addEventListener('popstate', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n            if (this.state.activeModal != null)\r\n                this.modalBack()    \r\n        })\r\n\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const isMobile = this.props.viewWidth <= ViewWidth.MOBILE;\r\n\r\n        const platform = this.props.platform\r\n\r\n        if (TournamentList.data.length !== 0) {\r\n            const Modal = (\r\n                <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\r\n                    {\r\n                        TournamentList['data'].map((elem) =>\r\n                            <ModalPage id={elem.tournament_id}\r\n                                onClose={this.modalBack}\r\n                                header={\r\n                                    <ModalPageHeader\r\n                                        right={isMobile && platform == IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss/></PanelHeaderButton>}\r\n                                        left={isMobile && platform === ANDROID && <PanelHeaderClose onClick={this.modalBack}></PanelHeaderClose>}\r\n                                    >\r\n                                        Информация \r\n                                    </ModalPageHeader>\r\n                                }\r\n                            >\r\n                                <div className=\"ModalPage__Content Turnament-Information__Group\">\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <h4>{elem.title}</h4>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Статус</div>\r\n                                            <div style={{marginLeft: 5}}>\r\n                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                    Идут бои\r\n                                                </span>\r\n                                        </div>\r\n                                        <br/>\r\n\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"green\"}}/><Time timestamp={elem.start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"rgb(200, 0, 0)\"}}/><Time timestamp={elem.end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Команды</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Максимальное число команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].max}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Создано команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].total}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Подтвердило участие:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].confirmed}\r\n                                            </span>\r\n                                        </div>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <p className=\"Pre\">\r\n                                            {elem.description}\r\n                                        </p>\r\n                                    </Group>\r\n                                </div>\r\n                            </ModalPage>    \r\n                        )\r\n                    }\r\n                </ModalRoot>\r\n            );\r\n            \r\n            var List = (\r\n                <Root modal={Modal} popout={this.state.popout}>\r\n                    <CardGrid size={isDesktop ? \"m\" : \"l\"}>\r\n                        {\r\n                            TournamentList['data'].map((elem) => \r\n                                    <Card mode=\"outline\">\r\n                                            <div className={elem.status + \" border\"}></div>\r\n                                            <div className=\"TournamentCard\">\r\n                                                <div className=\"TournamentCard__Header\">{elem.title}</div>\r\n                                                <div className=\"TornamentCard__Info\">\r\n                                                    <div className=\"TornamentCard__Info-Start\">\r\n                                                        <Icon20CalendarOutline width={23} height={23}/>\r\n                                                        <div className=\"TornamentCard__Info-Start-Text\">\r\n                                                            <Time timestamp={elem.start_at} mode=\"day\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"TournamentCard__Info-Main TournamentCard__Info-Main-OneItem\">\r\n                                                        <div className=\"TournamentCard__Info-Main-Start\">\r\n                                                            <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                                            <div style={{marginLeft: 5}}>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.start_at}/>\r\n                                                                </span>\r\n                                                                <br/>\r\n                                                                <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                                    <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.end_at}/>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"TornamentCard__Footer\">\r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-InfoButton\" mode=\"outline\" before={<Icon16InfoOutline/>} onClick={() => this.setActiveModal(elem.tournament_id)}>Подробнее</Button> \r\n                                                    <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" getRootRef={this.shareTargetRef} onClick={() => this.openShareActionSheet(elem)}><Icon16ReplyOutline/></Button>\r\n                                                </div>  \r\n                                            </div>\r\n                                    </Card>\r\n                                \r\n                            )\r\n                        }\r\n                    </CardGrid>\r\n                    {this.state.snackbar}                    \r\n                </Root>\r\n            )\r\n        } else {\r\n            if (this.props.mode == \"none\") {\r\n                List = (<span></span>)\r\n            } else {\r\n                var List = ( <Placeholder>Нет начавшихся турниров</Placeholder>);\r\n            }\r\n        }\r\n        return(List);\r\n    }\r\n}\r\n\r\nconst Running = withPlatform(withAdaptivity(RunningComponent, { viewWidth: true }))\r\n\r\nexport default Running;","import React from 'react';\r\nimport {CardGrid, Card, Button, ModalPage, ModalRoot, ModalPageHeader, PanelHeaderButton, IOS, ANDROID, withPlatform, Group, Placeholder, ActionSheet, ActionSheetItem, Root, ViewWidth, withAdaptivity, PanelHeaderClose} from \"@vkontakte/vkui\";\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\r\nimport Icon16CheckCircleOutline from '@vkontakte/icons/dist/16/check_circle_outline';\r\nimport Icon16ReplyOutline from '@vkontakte/icons/dist/16/reply_outline';\r\nimport Icon16InfoOutline from '@vkontakte/icons/dist/16/info_outline';\r\nimport Time from \"../time/TimeComponent\";\r\nimport TimeStr from \"../time/TimeString\";\r\nimport {Snackbar, Avatar} from '@vkontakte/vkui'\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done'\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { Icon24Dismiss } from '@vkontakte/icons';\r\n\r\nvar tournament = new XMLHttpRequest();\r\n    tournament.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/list/?application_id=132530213b8f23d4c0e1d1f423c307a9&status=finished\", false)\r\n    tournament.send();\r\n\r\n    var TournamentList = JSON.parse(tournament.responseText);\r\n\r\n    var tournamentInfo = TournamentList['data'].reduce(\r\n        function(p,e){\r\n            var tournamentInfoRequest = new XMLHttpRequest();\r\n            tournamentInfoRequest.open(\"POST\", \"https://api.wotblitz.ru/wotb/tournaments/info/?application_id=132530213b8f23d4c0e1d1f423c307a9&tournament_id=\" + e.tournament_id + \"&fields=teams\", false)\r\n            tournamentInfoRequest.send();\r\n            p[e[\"tournament_id\"]] = JSON.parse(tournamentInfoRequest.responseText).data[e[\"tournament_id\"]].teams;\r\n            return p;\r\n        },\r\n        {}\r\n    );   \r\n\r\nvar isOpenedFirstTime = false \r\nvar tournamentsID = []  \r\nvar positionY \r\nvar positionX\r\nvar stylesIsUpdated\r\nvar buttonHeight\r\n\r\nTournamentList['data'].map((elem) => {\r\n    tournamentsID.push(elem.tournament_id)\r\n    sessionStorage.setItem(elem.tournament_id, true)\r\n})\r\n\r\nfunction getPosition() {\r\n    stylesIsUpdated = false\r\n    buttonHeight = event.target.closest(\".vkuiButton\").getBoundingClientRect().height\r\n    positionY = event.target.closest(\".vkuiButton\").getBoundingClientRect().top\r\n    positionX = event.target.closest(\".vkuiButton\").getBoundingClientRect().left\r\n}\r\n    \r\nclass FinishComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          activeModal: null,\r\n          modalHistory: [],\r\n          popout: null,\r\n          snackbar: null,\r\n          elem: null\r\n        };\r\n\r\n        this.shareTargetRef = React.createRef();\r\n        this.sendPost = this.sendPost.bind(this)\r\n        this.shareLink = this.shareLink.bind(this)\r\n\r\n        this.closeActionSheet = () => {\r\n            this.setState({ popout: null })\r\n        }\r\n    \r\n        this.modalBack = () => {\r\n            setTimeout(() => {\r\n                this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n                history.back()\r\n                document.body.style.overflow = \"visible\";\r\n            }, 200)\r\n        };\r\n    }\r\n\r\n    buildRequest(elem) {\r\n        let request\r\n        let message = TimeStr(elem.end_at, \"day\") + \" прошел турнир \\\"\" + elem.title + \"\\\"\" +\r\n                      \"\\nПодробнее можно узнать в приложении:\"\r\n        request = {\r\n            \"message\": message,\r\n            \"attachments\": \"https://vk.com/app7446072#\" + elem.tournament_id\r\n        }\r\n        return request\r\n    }\r\n\r\n    sendPost() {\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                Запись опубликована\r\n            </Snackbar> \r\n\r\n        let request = this.buildRequest(this.state.elem)\r\n\r\n        bridge\r\n            .send(\"VKWebAppShowWallPostBox\", request)\r\n            .then(data => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})\r\n            })      \r\n    }\r\n\r\n    shareLink() {\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const successSnackbar =\r\n            <Snackbar\r\n                onClose={() => this.setState({ snackbar: null })}\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--green)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ссылка скопирована' : 'Ссылка отправлена'}\r\n            </Snackbar> \r\n\r\n        const errorSnackbar =\r\n            <Snackbar\r\n                onClose={() => \r\n                    this.setState({ snackbar: null })\r\n                }\r\n                duration=\"2000\"\r\n                before={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n                {isDesktop ? 'Ошибка при копировании ссылки' : 'Ошибка при отправке ссылки'}\r\n            </Snackbar>\r\n\r\n        let link = \"https://vk.com/app7446072#\" + this.state.elem.tournament_id\r\n\r\n        if (isDesktop) {\r\n            bridge\r\n            .send(\"VKWebAppCopyText\", {text: link})\r\n            .then(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: successSnackbar})    \r\n            })   \r\n            .catch(() => {\r\n                if (this.state.snackbar) return\r\n                this.setState({snackbar: errorSnackbar})    \r\n            })   \r\n        } else {\r\n            bridge\r\n            .send(\"VKWebAppShare\", {\"link\": link})\r\n            .then(data => {\r\n                const isDesktop = this.props.viewWidth > ViewWidth.MOBILE\r\n                if (isDesktop) {\r\n                    if (this.state.snackbar) return\r\n                    this.setState({snackbar: successSnackbar})    \r\n                }\r\n            })\r\n        }   \r\n    }\r\n\r\n    openShareActionSheetFinish(e) {\r\n        getPosition()\r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        if (!isDesktop) {\r\n            var state = {actionShet: e.tournament_id}\r\n            var title = ''\r\n            history.pushState(state, title)\r\n        }\r\n        this.setState({elem: e})\r\n        this.setState({ popout:\r\n            <ActionSheet \r\n                onClose={() => {\r\n                    this.setState({ popout: null })\r\n                    if (!isDesktop) {\r\n                        history.back()\r\n                    }    \r\n                }}\r\n                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n                header=\"Как вы хотите поделиться турниром?\"\r\n                toggleRef={this.shareTargetRef.current}\r\n            >\r\n                <ActionSheetItem autoclose onClick={() => this.sendPost()}>\r\n                    На стене\r\n                </ActionSheetItem>\r\n                <ActionSheetItem autoclose onClick={() => this.shareLink()}>\r\n                    {isDesktop ? 'Скопировать ссылку' : 'Отправить ссылку'}\r\n                </ActionSheetItem>\r\n          </ActionSheet>\r\n        });\r\n    }\r\n\r\n    setActiveModal(activeModal) {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n            modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n            modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n            modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n          activeModal,\r\n          modalHistory\r\n        });\r\n\r\n        if (this.state.activeModal == null) {\r\n            var state = {modal: 'modal'}\r\n            var title = ''\r\n            document.body.style.overflow = \"hidden\";\r\n            history.pushState(state, title)\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash != '' && !isOpenedFirstTime && tournamentsID.indexOf(Number(window.location.hash.slice(1))) != -1) {\r\n            this.setActiveModal(Number(window.location.hash.slice(1)))\r\n            isOpenedFirstTime = true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var elem = document.getElementsByClassName(\"vkuiActionSheet--desktop\")\r\n        if (elem[0]) {\r\n            var observer = new MutationObserver(function(mutations) {\r\n                if (mutations && !stylesIsUpdated) {\r\n                    if (document.documentElement.clientHeight - positionY < 200) {\r\n                        positionY = positionY - elem[0].getBoundingClientRect().height - 5    \r\n                    } else {\r\n                        positionY += buttonHeight + 5    \r\n                    }\r\n                    elem[0].style.top = positionY + \"px\"\r\n                    elem[0].style.left = positionX + \"px\"\r\n                    stylesIsUpdated = true\r\n                } \r\n            });\r\n            \r\n            observer.observe(elem[0], { attributes : true, attributeFilter : ['style'] }); \r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        window.addEventListener('scroll', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n        })\r\n\r\n        window.addEventListener('popstate', () => {\r\n            if (this.state.popout != null)\r\n                this.closeActionSheet()\r\n            if (this.state.activeModal != null)\r\n                this.modalBack()    \r\n        })\r\n        \r\n        const isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n        const isMobile = this.props.viewWidth <= ViewWidth.MOBILE;\r\n\r\n        const platform = this.props.platform;\r\n\r\n        if (TournamentList.data.length !== 0) {\r\n            const Modal = (\r\n                <ModalRoot activeModal={this.state.activeModal} onClose={this.modalBack}>\r\n                    {\r\n                        TournamentList['data'].map((elem) =>\r\n                            <ModalPage id={elem.tournament_id}\r\n                                onClose={this.modalBack}\r\n                                header={\r\n                                    <ModalPageHeader \r\n                                        right={isMobile && platform === IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss/></PanelHeaderButton>}\r\n                                        left={isMobile && platform === ANDROID && <PanelHeaderClose onClick={this.modalBack}/>}\r\n                                    >\r\n                                        Информация \r\n                                    </ModalPageHeader>\r\n                                }\r\n                            >\r\n                                <div className=\"ModalPage__Content Turnament-Information__Group\">\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <h4>{elem.title}</h4>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Статус</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                Турнир завершён\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Регистрация</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CheckCircleOutline width={17} height={17}/><Time timestamp={elem.registration_start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16CancelCircleOutline width={17} height={17}/><Time timestamp={elem.registration_end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Продолжительность боёв</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"green\"}}/><Time timestamp={elem.start_at}/>\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <Icon16Recent width={17} height={17} style={{color: \"rgb(200, 0, 0)\"}}/><Time timestamp={elem.end_at}/>\r\n                                            </span>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className=\"TournamentCard__Info-Main-Title\">Команды</div>\r\n                                        <div style={{marginLeft: 5}}>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Максимальное число команд:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].max}\r\n                                            </span>\r\n                                            <br/>\r\n                                            <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\r\n                                                <span style={{fontWeight: \"450\"}}>Приняло участие:&nbsp;</span> {tournamentInfo[elem[\"tournament_id\"]].total}\r\n                                            </span>\r\n                                        </div>\r\n                                    </Group>\r\n                                    <Group className=\"vkuiGroup--custom-separator\">\r\n                                        <p className=\"Pre\">\r\n                                            {elem.description}\r\n                                        </p>\r\n                                    </Group>\r\n                                </div>\r\n                            </ModalPage>    \r\n                        )\r\n                    }\r\n                </ModalRoot>\r\n            );\r\n\r\n            var List = (\r\n                <Root modal={Modal} popout={this.state.popout}>\r\n                    <CardGrid size={isDesktop ? \"m\" : \"l\"}>\r\n                        {\r\n                            TournamentList['data'].map((elem) => \r\n                                <Card mode=\"outline\">\r\n                                        <div className={elem.status + \" border\"}></div>\r\n                                        <div className=\"TournamentCard\">\r\n                                            <div className=\"TournamentCard__Header\">{elem.title}</div>\r\n                                            <div className=\"TornamentCard__Info\">\r\n                                                <div className=\"TornamentCard__Info-Start\">\r\n                                                    <Icon20CalendarOutline width={23} height={23}/>\r\n                                                    <div className=\"TornamentCard__Info-Start-Text\">\r\n                                                        <Time timestamp={elem.start_at} mode=\"day\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"TournamentCard__Info-Main\">\r\n                                                    Турнир завершён\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"TornamentCard__Footer\">\r\n                                                <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-InfoButton\" mode=\"outline\" before={<Icon16InfoOutline/>} onClick={() => this.setActiveModal(elem.tournament_id)}>Подробнее</Button> \r\n                                                <Button className=\"TornamentCard__Footer-Button TornamentCard__Footer-SmallButton\" mode=\"outline\" getRootRef={this.shareTargetRef} onClick={() => this.openShareActionSheetFinish(elem)}><Icon16ReplyOutline/></Button>\r\n                                            </div> \r\n                                        </div>\r\n                                </Card>\r\n                            \r\n                            )\r\n                        }\r\n                    </CardGrid>\r\n                    {this.state.snackbar}\r\n                </Root>\r\n            )\r\n        } else {\r\n            if (this.props.mode == \"none\") {\r\n                List = (<span></span>)\r\n            } else {\r\n                var List = ( <Placeholder>Нет завершённых турниров</Placeholder>);\r\n            }\r\n        }\r\n        return(List);\r\n    }\r\n}\r\n\r\nconst Finish = withPlatform(withAdaptivity(FinishComponent, { viewWidth: true }));\r\n\r\nexport default Finish;","import React from 'react';\r\nimport Upcoming from \"./Upcoming\";\r\nimport RegStart from \"./RegistrationStart\";\r\nimport RegFinish from \"./RegistrationFinish\";\r\nimport Running from \"./Running\";\r\nimport Finish from \"./Finish\";\r\n\r\nclass All extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <RegStart mode=\"none\"/>\r\n                <Upcoming mode=\"none\"/>\r\n                <RegFinish mode=\"none\"/>\r\n                <Running mode=\"none\"/>\r\n                <Finish mode=\"none\"/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default All;","import React from 'react';\r\nimport {View, Avatar, Snackbar, Panel, PanelHeader, Group, Tabs, HorizontalScroll, TabsItem, AppRoot, AdaptivityProvider, ConfigProvider, FixedLayout, Separator, withPlatform, ViewWidth} from '@vkontakte/vkui';\r\nimport Upcoming from \"./getTournament/Upcoming\";\r\nimport All from \"./getTournament/all\";\r\nimport RegStart from \"./getTournament/RegistrationStart\";\r\nimport RegFinish from \"./getTournament/RegistrationFinish\";\r\nimport Running from \"./getTournament/Running\";\r\nimport Finish from \"./getTournament/Finish\";\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel'\r\n\r\nvar isOpen = false\r\n\r\nclass Application extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n        contextOpened: false,\r\n        mode: 'all',\r\n\t\tactiveTab: 'all',\r\n\t\tsnackbar: null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n        if (window.location.hash != '' && !isOpen && !sessionStorage.getItem(window.location.hash.slice(1))) {\r\n            const errorSnackbar =\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tonClose={() => \r\n\t\t\t\t\t\tthis.setState({ snackbar: null })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tduration=\"2000\"\r\n\t\t\t\t\tbefore={<Avatar size={24} style={{ background: 'var(--red)' }}><Icon16Cancel fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n\t\t\t\t>\r\n\t\t\t\t\tНет информации о турнире\r\n\t\t\t\t</Snackbar>\r\n\t\t\tthis.setState({snackbar: errorSnackbar})\t\t\r\n            isOpen = true\r\n        }\r\n    }\r\n\r\n\trender() {\r\n\t\tconst isDesktop = this.props.viewWidth > ViewWidth.MOBILE;\r\n\r\n\t\tif (isDesktop) {\r\n\t\t\twindow.onfocus = (e) => {\r\n\t\t\t\tlet x = window.scrollX\r\n\t\t\t\tlet y = window.scrollY\r\n\r\n\t\t\t\tdocument.body.style.height = \"105%\"\r\n\t\t\t\twindow.scroll(x, y + 5)\r\n\t\t\t\twindow.scroll(x, y - 5)\r\n\t\t\t\tdocument.body.style.height = \"100%\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet content;\r\n\t\tif (this.state.activeTab === 'all') {\r\n\t\t\tcontent = <All/>\r\n\t\t}\r\n\t\tif (this.state.activeTab === 'upcoming') {\r\n\t\t\tcontent = <Upcoming/>;\r\n\t\t}\r\n\t\tif (this.state.activeTab === 'registration_started') {\r\n\t\t\tcontent = <RegStart/>;\r\n\t\t}\r\n\t\tif (this.state.activeTab === 'registration_finished') {\r\n\t\t\tcontent = <RegFinish/>;\r\n\t\t}\r\n\t\tif (this.state.activeTab === 'running') {\r\n\t\t\tcontent = <Running/>;\r\n\t\t}\r\n\t\tif (this.state.activeTab === 'finish') {\r\n\t\t\tcontent = <Finish/>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t//<ConfigProvider platform=\"ios\">\r\n\t\t\t<View>\r\n\t\t\t\t<Panel>\r\n\t\t\t\t\t<PanelHeader>Tурниры WoT Blitz</PanelHeader>\r\n\t\t\t\t\t<Group style={{paddingTop: 40}}>\r\n\t\t\t\t\t\t<FixedLayout vertical=\"top\" filled>\r\n\t\t\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t\t\t<HorizontalScroll showArrows getScrollToLeft={i => i - 120} getScrollToRight={i => i + 120}>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'all'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'all'}\r\n\t\t\t\t\t\t\t\t\t>Все</TabsItem>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'registration_started'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'registration_started'}\r\n\t\t\t\t\t\t\t\t\t>Идёт регистрация</TabsItem>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'upcoming'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'upcoming'}\r\n\t\t\t\t\t\t\t\t\t>Запланированные</TabsItem>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => { \r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'registration_finished'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'registration_finished'}\r\n\t\t\t\t\t\t\t\t\t>Регистрация завершена</TabsItem>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'running'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'running'}\r\n\t\t\t\t\t\t\t\t\t>Идут бои</TabsItem>\r\n\t\t\t\t\t\t\t\t\t<TabsItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => { \r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({activeTab: 'finish'})\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={this.state.activeTab === 'finish'}\r\n\t\t\t\t\t\t\t\t\t>Бои завершены</TabsItem>\r\n\t\t\t\t\t\t\t\t</HorizontalScroll>\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t<Separator wide />\r\n\t\t\t\t\t\t</FixedLayout>\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t{this.state.snackbar} \r\n\t\t\t\t\t</Group>\r\n\t\t\t\t</Panel>\r\n\t\t\t</View>\r\n\t\t\t//</ConfigProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<Application/>\r\n\t\t\t</AppRoot>\r\n\t\t</AdaptivityProvider>\r\n\t);\r\n}\r\n\r\nexport default withPlatform(App);\r\n\r\n"],"sourceRoot":""}