{"version":3,"sources":["blank_panels/preloader.js","index.js"],"names":["Preloader","props","state","content","window","addEventListener","setState","stretched","icon","fill","this","React","Component","bridge","send","subscribe","e","detail","type","document","body","setAttribute","data","scheme","ReactDOM","render","getElementById","then","App","default"],"mappings":"mfA0CeA,E,kDApCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,QAAS,cAAC,IAAD,KAJE,E,0CAQnB,WAAU,IAAD,OAcL,OAbAC,OAAOC,iBAAiB,WAAW,WAC/B,EAAKC,SAAS,CAACH,QAAS,eAAC,IAAD,CACII,WAAS,EACTC,KAAM,cAAC,IAAD,CAAmBC,KAAM,eAFnC,iKAIgC,uBAJhC,iVAaxB,cAAC,IAAD,UACI,cAAC,IAAD,UACP,cAAC,IAAD,UACe,cAAC,IAAD,UACKC,KAAKR,MAAMC,oB,GA5BhBQ,IAAMC,W,gDCK9BC,IAAOC,KAAK,gBAEZD,IAAOE,WAAU,SAACC,GACQ,yBAAlBA,EAAEC,OAAOC,MACTC,SAASC,KAAKC,aAAa,SAAUL,EAAEC,OAAOK,KAAKC,WAI3DC,IAASC,OAAO,cAAC,EAAD,IAAcN,SAASO,eAAe,SAGxC,oDACNC,MAAK,YAAqB,IAAVC,EAAS,EAAlBC,QACPL,IAASC,OAAO,cAACG,EAAD,IAAQT,SAASO,eAAe,YAMxD,oDAAkBC,MAAK,YAAwB,EAArBE,a","file":"static/js/main.4c4c3539.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AdaptivityProvider, Panel, Placeholder, View, AppRoot, ScreenSpinner } from \"@vkontakte/vkui\";\r\nimport { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Color } from \"chalk\";\r\n\r\nclass Preloader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: <ScreenSpinner/>\r\n        };\r\n    }\r\n\r\n    render() {\r\n        window.addEventListener('offline', () => {\r\n            this.setState({content: <Placeholder\r\n                                        stretched\r\n                                        icon={<Icon56WifiOutline fill={'var(--red)'}/>}\r\n                                    >\r\n                                        Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                                    </Placeholder>})\r\n        })\r\n\r\n        // window.addEventListener('online', () => {\r\n        //     this.setState({content: <ScreenSpinner/>})     \r\n        // })\r\n\r\n        return(\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n \t\t\t\t    <View>\r\n                        <Panel>\r\n                            {this.state.content}  \r\n                        </Panel>\r\n                    </View>\r\n \t\t\t    </AppRoot>\r\n \t\t    </AdaptivityProvider>    \r\n        )\r\n    }  \r\n}\r\n\r\nexport default Preloader","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport Preloader from './blank_panels/preloader'\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './style.css';\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nbridge.subscribe((e) => {\n    if (e.detail.type === \"VKWebAppUpdateConfig\") {\n        document.body.setAttribute(\"scheme\", e.detail.data.scheme);\n    }\n});\n\nReactDOM.render(<Preloader/>, document.getElementById(\"root\"));\n\nfunction load() {\n    let obj = import(\"./App\")\n    obj.then(({default: App}) => {\n        ReactDOM.render(<App/>, document.getElementById(\"root\"));\n    })    \n}\n\nload()\n    \nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n\n"],"sourceRoot":""}