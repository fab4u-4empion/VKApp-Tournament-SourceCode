{"version":3,"sources":["errorBoundary.js","index.js"],"names":["ErrorBoundary","props","state","hasError","networkError","window","addEventListener","setState","this","stretched","icon","fill","children","error","React","Component","bridge","send","App","lazy","CoockiPlaceholder","Placeholder","FullApp","fallback","history","pushState","subscribe","e","detail","type","document","body","setAttribute","data","scheme","localStorage","setItem","ReactDOM","render","getElementById"],"mappings":"4hBAsCeA,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,UAAU,EACVC,cAAc,GALH,E,0CAanB,WAAU,IAAD,OAKL,OAJAC,OAAOC,iBAAiB,WAAW,WAC/B,EAAKC,SAAS,CAACH,cAAc,OAG9BI,KAAKN,MAAMC,SAEN,eAAC,IAAD,CACIM,WAAS,EACTC,KAAM,cAAC,IAAD,CAAmBC,KAAM,eAFnC,iKAIgC,uBAJhC,4UASDH,KAAKP,MAAMW,Y,uCApBtB,SAAgCC,GAC5B,MAAO,CAAEV,UAAU,O,GAXCW,IAAMC,W,SCSlCC,IAAOC,KAAK,gBAEZ,IAAMC,EAAMC,gBAAK,kBAAM,uDAEjBC,EAAsB,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAaC,aAAW,EACpBZ,WAAS,EACTC,KAAM,cAAC,IAAD,CAAoBC,KAAM,eAFpC,qOAIkD,uBAJlD,oIAoB5C,SAASW,IACL,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACI,cAACL,EAAD,gBAhBhCb,OAAOmB,QAAQC,UAAU,KAAM,MAE/BT,IAAOU,WAAU,SAACC,GACQ,yBAAlBA,EAAEC,OAAOC,MACTC,SAASC,KAAKC,aAAa,SAAUL,EAAEC,OAAOK,KAAKC,WAsB3D,IACIC,aAAaC,QAAQ,OAAQ,QAC7BC,IAASC,OAAO,cAAChB,EAAD,IAAYQ,SAASS,eAAe,SACtD,SACEF,IAASC,OAAOlB,EAAmBU,SAASS,eAAe,Y","file":"static/js/main.41a49b05.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n            networkError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        window.addEventListener('offline', () => {\r\n            this.setState({networkError: true})\r\n        })\r\n\r\n        if(this.state.hasError) {\r\n            return (\r\n                <Placeholder\r\n                    stretched\r\n                    icon={<Icon56WifiOutline fill={'var(--red)'}/>}\r\n                >\r\n                    Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                </Placeholder>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './style.css';\r\nimport { AdaptivityProvider, AppRoot, Panel, Placeholder, ScreenSpinner, View } from \"@vkontakte/vkui\";\r\nimport ErrorBoundary from './errorBoundary'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\n\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nconst App = lazy(() => import('./App'))\r\n\r\nconst CoockiPlaceholder =   <AdaptivityProvider>\r\n                                <AppRoot>\r\n                                    <View>\r\n                                        <Panel>\r\n                                            <Placeholder Placeholder\r\n                                                stretched\r\n                                                icon={<Icon56ErrorOutline fill={'var(--red)'}/>}\r\n                                            >\r\n                                                Сервис не может работать с выключенными Cooki <br/> или в режиме инкогнито\r\n                                            </Placeholder>\r\n                                        </Panel>\r\n                                    </View>\r\n                                </AppRoot>\r\n                            </AdaptivityProvider>\r\n\r\n\r\nwindow.history.pushState(null, null)\r\n\r\nbridge.subscribe((e) => {\r\n    if (e.detail.type === \"VKWebAppUpdateConfig\") {\r\n        document.body.setAttribute(\"scheme\", e.detail.data.scheme);\r\n    }\r\n});\r\n\r\nfunction FullApp() {\r\n    return (\r\n        <AdaptivityProvider>\r\n            <AppRoot>\r\n                <View>\r\n                    <Panel>\r\n                        <ErrorBoundary>\r\n                            <Suspense fallback={<ScreenSpinner/>}>\r\n                                <App/>\r\n                            </Suspense>\r\n                        </ErrorBoundary>\r\n                    </Panel>\r\n                </View>\r\n            </AppRoot>\r\n        </AdaptivityProvider>\r\n    )\r\n}\r\n\r\ntry {\r\n    localStorage.setItem('test', 'test')\r\n    ReactDOM.render(<FullApp/>, document.getElementById(\"root\"));\r\n} catch {\r\n    ReactDOM.render(CoockiPlaceholder, document.getElementById(\"root\"));\r\n}\r\n\r\n//import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n"],"sourceRoot":""}